<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.eagle.cloud</groupId>
		<artifactId>business-center</artifactId>
		<version>1.0.0</version>
	</parent>
	<artifactId>display-route-sync</artifactId>
	<packaging>jar</packaging>

	<dependencies>
		<!-- 日志统一配置 -->
		<dependency>
			<groupId>com.eagle.cloud</groupId>
			<artifactId>log-core</artifactId>
			<version>${core.version}</version>
		</dependency>
		<!-- 公共实体类模块 -->
		<dependency>
			<groupId>com.eagle.cloud</groupId>
			<artifactId>api-commons</artifactId>
			<version>${core.version}</version>
		</dependency>
		<!-- 关系型和非关系型数据库配置 -->
		<dependency>
			<groupId>com.eagle.cloud</groupId>
			<artifactId>db-core</artifactId>
			<version>${core.version}</version>
		</dependency>
		<!-- 资源服务器 -->
		<dependency>
			<groupId>com.eagle.cloud</groupId>
			<artifactId>security-core</artifactId>
			<version>${core.version}</version>
		</dependency>
		<!-- grpc通信模块 -->
		<dependency>
			<groupId>com.eagle.cloud</groupId>
			<artifactId>grpc-lib</artifactId>
			<version>${core.version}</version>
		</dependency>
		<!-- swagger -->
		<dependency>
			<groupId>com.eagle.cloud</groupId>
			<artifactId>swagger-core</artifactId>
			<version>${core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
            <!-- 移除嵌入式tomcat插件 -->
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>org.springframework.boot</groupId>-->
                    <!--<artifactId>spring-boot-starter-tomcat</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-confarter-webiguration-processor</artifactId>-->
			<!--<optional>true</optional>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>net.devh</groupId>-->
			<!--<artifactId>grpc-server-spring-boot-starter</artifactId>-->
			<!--<version>${net-devh-grpc.version}</version>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>org.springframework.cloud</groupId>-->
			<!--<artifactId>spring-cloud-starter-zipkin</artifactId>-->
		<!--</dependency>-->
		<!-- 选用eureka时打开 -->
		<!--<dependency>-->
			<!--<groupId>org.springframework.cloud</groupId>-->
			<!--<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>-->
		<!--</dependency>-->
		<!-- https://mvnrepository.com/artifact/net.sf.json-lib/json-lib -->
		<dependency>
		    <groupId>net.sf.json-lib</groupId>
		    <artifactId>json-lib</artifactId>
		    <version>2.4</version>
		    <classifier>jdk15</classifier>
		</dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>maven-public</id>
			<name>eagle-maven-public</name>
			<url>http://10.44.111.127:8081/repository/maven-public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<!-- 形成带第三方jar包的可执行jar包，jar包目录结构如下 application.properties lib META-INF mybatis org -->
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 首先加入pom ${docker.image.prefix} ： 这个是你的dockerhub注册上面的名字 gitgeek 这个是我注册的 ${project.artifactId} ： 项目的名称 dockerDirectory ： dockerfile的文件路径 -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<dockerHost>${docker.host}</dockerHost>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
		<finalName>${project.artifactId}</finalName>
	</build>
</project>