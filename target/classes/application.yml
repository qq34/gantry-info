spring:
  session:
    store-type: redis
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    dynamic:
      enable: true
    druid: 
      # JDBC 配置(驱动类自动从url的mysql识别,数据源类型自动识别)
      core:
        url: jdbc:mysql://localhost:3306/db_screen?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=Asia/Shanghai
        #        url: jdbc:mysql://44.142.2.11:3306/db_screen?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 369abcd
        # driver-class-name: com.mysql.jdbc.Driver
        # driver-class-name: com.mysql.cj.jdbc.Driver
      log:
        url: jdbc:mysql://localhost:3306/db_screen?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 369abcd
        # driver-class-name: com.mysql.jdbc.Driver
        # driver-class-name: com.mysql.cj.jdbc.Driver
      # 连接池配置(通常来说, 只需要修改initialSize, minIdle, maxActive)
      initial-size: 1
      max-active: 20
      min-idle: 1
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 打开PSCache, 并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: SELECT 'x'
      test-on-borrow: true
      test-on-return: true
      test-while-idle: true
      # 配置间隔多久才进行一次检测, 检测需要关闭的空闲连接, 单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间, 单位是毫秒
      min-evictable-idle-time-millis: 300000
      filters: stat,wall
      # WebStatFilter配置, 说明请参考Druid Wiki, 配置_配置WebStatFilter
      # 是否启用StatFilter默认值true
      web-stat-filter.enabled: true
      web-stat-filter.url-pattern: /*
      web-stat-filter.exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      web-stat-filter.session-stat-max-count: 1000
      web-stat-filter.profile-enable: true
      # StatViewServlet配置
      # 展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
      # 是否启用StatViewServlet默认值true
      stat-view-servlet.enabled: true
      # 根据配置中的url-pattern来访问内置监控页面, 如果是上面的配置, 内置监控页面的首页是/druid/index.html例如： http://110.76.43.235:9000/druid/index.html, http://110.76.43.235:8080/mini-web/druid/index.html 
      stat-view-servlet.url-pattern: /druid/*
      # 允许清空统计数据
      stat-view-servlet.reset-enable: true
      stat-view-servlet.login-username: admin
      stat-view-servlet.login-password: admin
      # StatViewSerlvet展示出来的监控信息比较敏感, 是系统运行的内部情况, 如果你需要做访问控制, 可以配置allow和deny这两个参数
      # deny优先于allow, 如果在deny列表中, 就算在allow列表中, 也会被拒绝。如果allow没有配置或者为空, 则允许所有访问
      # 配置的格式: <IP>或者<IP>/<SUB_NET_MASK_size>其中128.242.127.1/24
      # 24表示: 前面24位是子网掩码, 比对的时候, 前面24位相同就匹配,不支持IPV6
      # stat-view-servlet.allow=
      # stat-view-servlet.deny=128.242.127.1/24,128.242.128.1
      # Spring监控配置, 说明请参考Druid Github Wiki, 配置_Druid和Spring关联监控配置
      # aop-patterns= # Spring监控AOP切入点, 如x.y.z.service.*,配置多个英文逗号分隔

  redis:
################### redis 单机版 start ##########################
    host: wzhz.xyz
    port: 6379
    password: redis-server
    timeout: 6000
    database: 1
    lettuce:
      pool:
        max-active: 10 # 连接池最大连接数（使用负值表示没有限制）,如果赋值为-1, 则表示不限制；如果pool已经分配了maxActive个jedis实例, 则此时pool的状态为exhausted(耗尽)
        max-idle: 8    # 连接池中的最大空闲连接, 默认值也是8
        max-wait: 100  # 等待可用连接的最大时间, 单位毫秒, 默认值为-1, 表示永不超时。如果超过等待时间, 则直接抛出JedisConnectionException
        min-idle: 2    # 连接池中的最小空闲连接, 默认值也是0
      shutdown-timeout: 100ms
################### redis 单机版 end ##########################
#    cluster:
#      nodes: 130.75.131.237:7000,130.75.131.238:7000,130.75.131.239:7000,130.75.131.237:7001,130.75.131.238:7001,130.75.131.239:7001
#        #130.75.131.237:7000,130.75.131.238:7000,130.75.131.239:7000,130.75.131.237:7001,130.75.131.238:7001,130.75.131.239:7001
#        #192.168.3.157:7000,192.168.3.158:7000,192.168.3.159:7000,192.168.3.157:7001,192.168.3.158:7001,192.168.3.159:7001
#    timeout: 1000 # 连接超时时间（毫秒）
#    lettuce:
#      pool:
#        max-active: 10 # 连接池最大连接数（使用负值表示没有限制）,如果赋值为-1, 则表示不限制；如果pool已经分配了maxActive个jedis实例, 则此时pool的状态为exhausted(耗尽)
#        max-idle: 8    # 连接池中的最大空闲连接, 默认值也是8
#        max-wait: 100  # 等待可用连接的最大时间, 单位毫秒, 默认值为-1, 表示永不超时。如果超过等待时间, 则直接抛出JedisConnectionException
#        min-idle: 2    # 连接池中的最小空闲连接, 默认值也是0
#      shutdown-timeout: 100ms

# mybatis 配置
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  config-location: classpath:mybatis.cfg.xml
  mapper-locations: classpath*:com/eagle/**/dao/*.xml

# 配置 Ribbon 负载均衡调度规则  https://blog.csdn.net/ycd500756/article/details/80975410 https://www.jianshu.com/p/1bd66db5dc46 com.netflix.loadbalancer.IRule
ribbon:
  eager-load:
    enabled: true
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule # 轮询（默认）
#  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule # 随机分配
#  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule  # 重试（先按照轮询规则获取服务，如果获取服务失败则在指定时间内进行重试）
#  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule # 权重响应规则 <- RoundRobinRule
#  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ResponseTimeWeightedRule # 责任权重规则 <- RoundRobinRule
  ServerListRefreshInterval: 1000 # 刷新服务列表源的间隔时间
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  ReadTimeout: 90000
  ConnectTimeout: 90000
  OkToRetryOnAllOperations: true
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 1

# spring-security配置
security:
  oauth2:
    ignored: /**, /doc.html,/document.html
    resource:
      filter-order: 3
    token:
      store:
        type: redis

# Netflix开源了Hystrix组件, 实现了断路器模式 https://www.fangzhipeng.com/springcloud/2018/08/04/sc-f4-hystrix.html hystrix 设置最大容错超时时间
hystrix:
  threadpool:
    default:
      coreSize: 100
      maximumSize: 5000
      allowMaximumSizeToDivergeFromCoreSize: true
      maxQueueSize: -1
  command:
    default:
      circuitBreaker:
        foreOpen: false
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 900000 # 设置最大容错超时时间

# log logback配置
logging:
#  path: # 文件路径
#  file: # 文件名称
#  config: # 如果你即想完全掌控日志配置, 但又不想用logback.xml作为Logback配置的名字, 可以通过logging.config属性指定自定义的名字
  level:
    root: INFO # 日志级别从控制台打印出来的日志级别只有ERROR,WARN还有INFO, 如果你想要打印debug级别的日志, 可以配置debug=true
    com.eagle.cloud: DEBUG
    com.netflix: INFO # 用于心跳检测输出的日志
    com.ulisesbocchio.jasyptspringboot.configuration: INFO # com.ulisesbocchio.jasyptspringboot.configuration
    io.lettuce.core.protocol: INFO
    org.apache.http: INFO # 心跳检测输出报文
    org.hibernate: INFO # hibernate
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    org.springframework: INFO
    org.springframework.security: INFO

## 描述信息
#info:
#  blog-url: http://wzhz.xyz
#  author: wzhz
#  version: v1.0.0
